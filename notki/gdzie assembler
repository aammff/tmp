gdzie assembler

assembler ma jeszcze taką jedną ciekawą cechę mianowicie chodzi o to że w drugim tysiąc leciu czy teżw w dz dwudziestym wieku

jakby najbardziej popularnym mikroprocesorem był iks osiemdziesą osiemdziesiąt sześć intela  jakby najwięcej tego było 

najwięcej ludzi się na tym zna i to jest taki uniwersalny no tak wyszło po prostu


czyli jakby ktoś chciał zaprezentować jakiś algorytm m przykładowo to mógó mół mół mógłby zapisać w go w assemblerze iks osiem szes osz sześć

i jakby ludzie i za sto lat albo i za dwiescie bez iek wiekszego problemu mogli by odczytac taki program i zrozumiec natomiast jakby

taki algorytm zapisac w jakims skomplikowanym jezyku programowania no to naww no to nawte jesliby sie dalo go zapisac bardzo jakby


zwiezle no to jakby moze byc problem ze zeby za sto czy dwiescie lat takie cos uruchomic gdzies bo moze byc trudno jakby no niw nie wieadom

no jaka wersja kompilatora czy costam no a  z emulowaniem assemblera nie ma zadnego problemu  tak samo ludzie z roznych krajow czy roznych

kultur czy jezykow to tez latwiej assembler zrozumieja niz jakies skompliokwane jezyki rpg programowania


tu taka notka wpisana chronologicznie najpozniej ze jakby w tym artykule tych ostatnich trzych wierz wierszy jakby byc moze moglo by

nie byc no niestety tak sie ca no bardzo trudno s co wiedziec co gdzie s wpisac i kiedy cala sztuka na tym polega

takze taka uwaga ze te kolejne te jakby nie do konca pasuja


inna opcja przy prezentowaniu algorytmow jest jakby opracowanie wlasnej wlan wlasnego procesora architektury i tak bardzo znany autor

najlepszych pozycji  wlasnie  napisal  no to jakby jest  alternatywne jesli nie glowne podejscie trudno powiedziec tez  wydaje sie

sensowne moze i t i bardziej nawet jakos abstrakcyjnie i matematycznie  pewnie zalezy od w jakby powagi i wielkosci algorytmu ktory ktos chce opisac
