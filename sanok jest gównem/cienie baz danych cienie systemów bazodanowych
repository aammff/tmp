cienie baz danych


tak sobie m pommyślałem że mon mnogość tych różnych języków z obiektami to jakby wynika z różnych sposobów projektów różnych baz danych czyli to jakby tkaie uproszczone różne rozmaite schea schematy baz danych po prostu

es qu el najbardziej ogólny jest a te wszystkie tworki potworki otworki językowe to j to są takie jakieś widzimisia różnych tak tam osób na temat tego którea jaka część s esquela be będzi enajbardziej przydatna i jak 

pokonfigurowana


wszyscy tma probuja jakas baze danych mniej lub bardziej wirtualna sprojektowac to jezyka proramowania najczesciej bez tej czesci zapytaniowej


przypomina sie gobject do jezyka c gdzie jakby ta czesc obiektowe jako bioblioteka byla po prostu mimo ze tam w c jakby niby zadnego oficjlanego wsparcia do tej czesci obiektowje nie yblo


natomiast tkaim dosc prostym w chyba wzglednie dobrze zaprojektownym jezykiem z obiektami byl smalltalk bardzo malo slow kluczowych i jakby chyba wzglednie sensownie do zapamietania jakby to bylo


ale ogolnie jakby dla mnie pisze jakies opinie personalne jakby to kogos mialo obchodzic na mnie te obiekty wrazenia nigdy nie robily nie wiadomo jak jakiego

no jakies myslenia na temat hierac hierarchii dziedzicenia jakby widozcz widocznosci to jakby wszystko wydaje mi sie polistotne półistotne


w sensie taki system jest i tak potem nie do ogra ogarnięcia wystarczy j naj kaie jakieś wakacje poc pojechać czy coś i nic się już nie pamiętam i potemd dodawanie zmienianie czegoś jest już takim sz działaniem na ślepo

podobnie jak jakaś inna osoba miałby się takim projektem zajmować nikt tego i tak nie ogarnia i tylko kwestią czasu jest pojawienie sie niespotkanych błędów


sensowny soft większej wielkości to są raczej te systemy oparte na typach ggd gdzie te typy to taka zintegrowana dokumentacje ja dokumentacja jest do całości i przynajmniej wiadomo cz że coś się typuje to jest jakaś

informacja 
